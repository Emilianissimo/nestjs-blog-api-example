version: "3.4"

services:
  dev:
    container_name: api_dev
    build:
      dockerfile: ./Dockerfile
      context: .
      target: development
    volumes:
      - ./:/usr/src/app/
      - /usr/src/app/node_modules
    env_file:
      - ./.env
    command: npm run start:dev
    ports:
      - 3000:3000
    depends_on:
      - db
    restart: unless-stopped
  prod:
    container_name: api_prod
    build:
      dockerfile: ./Dockerfile
      context: .
      target: production
    volumes:
      - ./:/usr/src/app/
      - /usr/src/app/node_modules
    env_file:
      - ./.env
    command: npm run start:prod
    ports:
      - 80:80
    restart: unless-stopped
    depends_on:
      - db
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
volumes:
  postgres_data:
  